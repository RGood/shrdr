// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: chat/chat.proto

package chat

import (
	identity "github.com/RGood/shrdr/common/pkg/generated/identity"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JoinRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRoom) Reset() {
	*x = JoinRoom{}
	mi := &file_chat_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoom) ProtoMessage() {}

func (x *JoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoom.ProtoReflect.Descriptor instead.
func (*JoinRoom) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{0}
}

func (x *JoinRoom) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Target:
	//
	//	*Message_RoomId
	//	*Message_UserId
	Target        isMessage_Target `protobuf_oneof:"target"`
	Content       string           `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_chat_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetTarget() isMessage_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Message) GetRoomId() string {
	if x != nil {
		if x, ok := x.Target.(*Message_RoomId); ok {
			return x.RoomId
		}
	}
	return ""
}

func (x *Message) GetUserId() string {
	if x != nil {
		if x, ok := x.Target.(*Message_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type isMessage_Target interface {
	isMessage_Target()
}

type Message_RoomId struct {
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3,oneof"`
}

type Message_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

func (*Message_RoomId) isMessage_Target() {}

func (*Message_UserId) isMessage_Target() {}

type LeaveRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRoom) Reset() {
	*x = LeaveRoom{}
	mi := &file_chat_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoom) ProtoMessage() {}

func (x *LeaveRoom) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoom.ProtoReflect.Descriptor instead.
func (*LeaveRoom) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{2}
}

func (x *LeaveRoom) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type Send struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Action:
	//
	//	*Send_Join
	//	*Send_Leave
	//	*Send_Message
	Action        isSend_Action `protobuf_oneof:"action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Send) Reset() {
	*x = Send{}
	mi := &file_chat_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Send) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Send) ProtoMessage() {}

func (x *Send) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Send.ProtoReflect.Descriptor instead.
func (*Send) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{3}
}

func (x *Send) GetAction() isSend_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *Send) GetJoin() *JoinRoom {
	if x != nil {
		if x, ok := x.Action.(*Send_Join); ok {
			return x.Join
		}
	}
	return nil
}

func (x *Send) GetLeave() *LeaveRoom {
	if x != nil {
		if x, ok := x.Action.(*Send_Leave); ok {
			return x.Leave
		}
	}
	return nil
}

func (x *Send) GetMessage() *Message {
	if x != nil {
		if x, ok := x.Action.(*Send_Message); ok {
			return x.Message
		}
	}
	return nil
}

type isSend_Action interface {
	isSend_Action()
}

type Send_Join struct {
	Join *JoinRoom `protobuf:"bytes,1,opt,name=join,proto3,oneof"`
}

type Send_Leave struct {
	Leave *LeaveRoom `protobuf:"bytes,2,opt,name=leave,proto3,oneof"`
}

type Send_Message struct {
	Message *Message `protobuf:"bytes,3,opt,name=message,proto3,oneof"`
}

func (*Send_Join) isSend_Action() {}

func (*Send_Leave) isSend_Action() {}

func (*Send_Message) isSend_Action() {}

type ChatMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Target:
	//
	//	*ChatMessage_RoomId
	//	*ChatMessage_UserId
	Target        isChatMessage_Target `protobuf_oneof:"target"`
	Author        *identity.User       `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Content       string               `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp     int64                `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_chat_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_chat_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ChatMessage) GetTarget() isChatMessage_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ChatMessage) GetRoomId() string {
	if x != nil {
		if x, ok := x.Target.(*ChatMessage_RoomId); ok {
			return x.RoomId
		}
	}
	return ""
}

func (x *ChatMessage) GetUserId() string {
	if x != nil {
		if x, ok := x.Target.(*ChatMessage_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *ChatMessage) GetAuthor() *identity.User {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type isChatMessage_Target interface {
	isChatMessage_Target()
}

type ChatMessage_RoomId struct {
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3,oneof"`
}

type ChatMessage_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

func (*ChatMessage_RoomId) isChatMessage_Target() {}

func (*ChatMessage_UserId) isChatMessage_Target() {}

var File_chat_chat_proto protoreflect.FileDescriptor

const file_chat_chat_proto_rawDesc = "" +
	"\n" +
	"\x0fchat/chat.proto\x12\x04chat\x1a\x17identity/identity.proto\"#\n" +
	"\bJoinRoom\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\"c\n" +
	"\aMessage\x12\x19\n" +
	"\aroom_id\x18\x01 \x01(\tH\x00R\x06roomId\x12\x19\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontentB\b\n" +
	"\x06target\"$\n" +
	"\tLeaveRoom\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\"\x8a\x01\n" +
	"\x04Send\x12$\n" +
	"\x04join\x18\x01 \x01(\v2\x0e.chat.JoinRoomH\x00R\x04join\x12'\n" +
	"\x05leave\x18\x02 \x01(\v2\x0f.chat.LeaveRoomH\x00R\x05leave\x12)\n" +
	"\amessage\x18\x03 \x01(\v2\r.chat.MessageH\x00R\amessageB\b\n" +
	"\x06action\"\xad\x01\n" +
	"\vChatMessage\x12\x19\n" +
	"\aroom_id\x18\x01 \x01(\tH\x00R\x06roomId\x12\x19\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x12&\n" +
	"\x06author\x18\x03 \x01(\v2\x0e.identity.UserR\x06author\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestampB\b\n" +
	"\x06target24\n" +
	"\x04Chat\x12,\n" +
	"\aConnect\x12\n" +
	".chat.Send\x1a\x11.chat.ChatMessage(\x010\x01B7Z5github.com/RGood/shrdr/common/pkg/generated/chat;chatb\x06proto3"

var (
	file_chat_chat_proto_rawDescOnce sync.Once
	file_chat_chat_proto_rawDescData []byte
)

func file_chat_chat_proto_rawDescGZIP() []byte {
	file_chat_chat_proto_rawDescOnce.Do(func() {
		file_chat_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_chat_proto_rawDesc), len(file_chat_chat_proto_rawDesc)))
	})
	return file_chat_chat_proto_rawDescData
}

var file_chat_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_chat_chat_proto_goTypes = []any{
	(*JoinRoom)(nil),      // 0: chat.JoinRoom
	(*Message)(nil),       // 1: chat.Message
	(*LeaveRoom)(nil),     // 2: chat.LeaveRoom
	(*Send)(nil),          // 3: chat.Send
	(*ChatMessage)(nil),   // 4: chat.ChatMessage
	(*identity.User)(nil), // 5: identity.User
}
var file_chat_chat_proto_depIdxs = []int32{
	0, // 0: chat.Send.join:type_name -> chat.JoinRoom
	2, // 1: chat.Send.leave:type_name -> chat.LeaveRoom
	1, // 2: chat.Send.message:type_name -> chat.Message
	5, // 3: chat.ChatMessage.author:type_name -> identity.User
	3, // 4: chat.Chat.Connect:input_type -> chat.Send
	4, // 5: chat.Chat.Connect:output_type -> chat.ChatMessage
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_chat_chat_proto_init() }
func file_chat_chat_proto_init() {
	if File_chat_chat_proto != nil {
		return
	}
	file_chat_chat_proto_msgTypes[1].OneofWrappers = []any{
		(*Message_RoomId)(nil),
		(*Message_UserId)(nil),
	}
	file_chat_chat_proto_msgTypes[3].OneofWrappers = []any{
		(*Send_Join)(nil),
		(*Send_Leave)(nil),
		(*Send_Message)(nil),
	}
	file_chat_chat_proto_msgTypes[4].OneofWrappers = []any{
		(*ChatMessage_RoomId)(nil),
		(*ChatMessage_UserId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_chat_proto_rawDesc), len(file_chat_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_chat_proto_goTypes,
		DependencyIndexes: file_chat_chat_proto_depIdxs,
		MessageInfos:      file_chat_chat_proto_msgTypes,
	}.Build()
	File_chat_chat_proto = out.File
	file_chat_chat_proto_goTypes = nil
	file_chat_chat_proto_depIdxs = nil
}
