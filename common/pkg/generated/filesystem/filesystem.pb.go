// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: filesystem/filesystem.proto

package filesystem

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FSEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Record:
	//
	//	*FSEntry_File
	//	*FSEntry_Folder
	Record        isFSEntry_Record `protobuf_oneof:"record"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FSEntry) Reset() {
	*x = FSEntry{}
	mi := &file_filesystem_filesystem_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FSEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSEntry) ProtoMessage() {}

func (x *FSEntry) ProtoReflect() protoreflect.Message {
	mi := &file_filesystem_filesystem_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSEntry.ProtoReflect.Descriptor instead.
func (*FSEntry) Descriptor() ([]byte, []int) {
	return file_filesystem_filesystem_proto_rawDescGZIP(), []int{0}
}

func (x *FSEntry) GetRecord() isFSEntry_Record {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *FSEntry) GetFile() *File {
	if x != nil {
		if x, ok := x.Record.(*FSEntry_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *FSEntry) GetFolder() *Folder {
	if x != nil {
		if x, ok := x.Record.(*FSEntry_Folder); ok {
			return x.Folder
		}
	}
	return nil
}

type isFSEntry_Record interface {
	isFSEntry_Record()
}

type FSEntry_File struct {
	File *File `protobuf:"bytes,1,opt,name=file,proto3,oneof"`
}

type FSEntry_Folder struct {
	Folder *Folder `protobuf:"bytes,2,opt,name=folder,proto3,oneof"`
}

func (*FSEntry_File) isFSEntry_Record() {}

func (*FSEntry_Folder) isFSEntry_Record() {}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_filesystem_filesystem_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_filesystem_filesystem_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_filesystem_filesystem_proto_rawDescGZIP(), []int{1}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Folder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Contents      []*FSEntry             `protobuf:"bytes,2,rep,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Folder) Reset() {
	*x = Folder{}
	mi := &file_filesystem_filesystem_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Folder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Folder) ProtoMessage() {}

func (x *Folder) ProtoReflect() protoreflect.Message {
	mi := &file_filesystem_filesystem_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Folder.ProtoReflect.Descriptor instead.
func (*Folder) Descriptor() ([]byte, []int) {
	return file_filesystem_filesystem_proto_rawDescGZIP(), []int{2}
}

func (x *Folder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Folder) GetContents() []*FSEntry {
	if x != nil {
		return x.Contents
	}
	return nil
}

type BroadcastManifest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contents      []*FSEntry             `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastManifest) Reset() {
	*x = BroadcastManifest{}
	mi := &file_filesystem_filesystem_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastManifest) ProtoMessage() {}

func (x *BroadcastManifest) ProtoReflect() protoreflect.Message {
	mi := &file_filesystem_filesystem_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastManifest.ProtoReflect.Descriptor instead.
func (*BroadcastManifest) Descriptor() ([]byte, []int) {
	return file_filesystem_filesystem_proto_rawDescGZIP(), []int{3}
}

func (x *BroadcastManifest) GetContents() []*FSEntry {
	if x != nil {
		return x.Contents
	}
	return nil
}

// Upstream requests for data
type BroadcastRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	FilePath      string                 `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastRequest) Reset() {
	*x = BroadcastRequest{}
	mi := &file_filesystem_filesystem_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastRequest) ProtoMessage() {}

func (x *BroadcastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filesystem_filesystem_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastRequest.ProtoReflect.Descriptor instead.
func (*BroadcastRequest) Descriptor() ([]byte, []int) {
	return file_filesystem_filesystem_proto_rawDescGZIP(), []int{4}
}

func (x *BroadcastRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BroadcastRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BroadcastRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type DownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUser      string                 `protobuf:"bytes,1,opt,name=from_user,json=fromUser,proto3" json:"from_user,omitempty"`
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	ChunkSize     string                 `protobuf:"bytes,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	mi := &file_filesystem_filesystem_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filesystem_filesystem_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_filesystem_filesystem_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadRequest) GetFromUser() string {
	if x != nil {
		return x.FromUser
	}
	return ""
}

func (x *DownloadRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *DownloadRequest) GetChunkSize() string {
	if x != nil {
		return x.ChunkSize
	}
	return ""
}

type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ChunkCount    int64                  `protobuf:"varint,3,opt,name=chunk_count,json=chunkCount,proto3" json:"chunk_count,omitempty"`
	TotalChunks   int64                  `protobuf:"varint,4,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_filesystem_filesystem_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_filesystem_filesystem_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_filesystem_filesystem_proto_rawDescGZIP(), []int{6}
}

func (x *FileChunk) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileChunk) GetChunkCount() int64 {
	if x != nil {
		return x.ChunkCount
	}
	return 0
}

func (x *FileChunk) GetTotalChunks() int64 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_filesystem_filesystem_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filesystem_filesystem_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_filesystem_filesystem_proto_rawDescGZIP(), []int{7}
}

func (x *UploadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetManifestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Recursive     bool                   `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManifestRequest) Reset() {
	*x = GetManifestRequest{}
	mi := &file_filesystem_filesystem_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManifestRequest) ProtoMessage() {}

func (x *GetManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filesystem_filesystem_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManifestRequest.ProtoReflect.Descriptor instead.
func (*GetManifestRequest) Descriptor() ([]byte, []int) {
	return file_filesystem_filesystem_proto_rawDescGZIP(), []int{8}
}

func (x *GetManifestRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetManifestRequest) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

type GetManifestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contents      []*FSEntry             `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManifestResponse) Reset() {
	*x = GetManifestResponse{}
	mi := &file_filesystem_filesystem_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManifestResponse) ProtoMessage() {}

func (x *GetManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filesystem_filesystem_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManifestResponse.ProtoReflect.Descriptor instead.
func (*GetManifestResponse) Descriptor() ([]byte, []int) {
	return file_filesystem_filesystem_proto_rawDescGZIP(), []int{9}
}

func (x *GetManifestResponse) GetContents() []*FSEntry {
	if x != nil {
		return x.Contents
	}
	return nil
}

var File_filesystem_filesystem_proto protoreflect.FileDescriptor

const file_filesystem_filesystem_proto_rawDesc = "" +
	"\n" +
	"\x1bfilesystem/filesystem.proto\x12\n" +
	"filesystem\"i\n" +
	"\aFSEntry\x12&\n" +
	"\x04file\x18\x01 \x01(\v2\x10.filesystem.FileH\x00R\x04file\x12,\n" +
	"\x06folder\x18\x02 \x01(\v2\x12.filesystem.FolderH\x00R\x06folderB\b\n" +
	"\x06record\".\n" +
	"\x04File\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\"M\n" +
	"\x06Folder\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12/\n" +
	"\bcontents\x18\x02 \x03(\v2\x13.filesystem.FSEntryR\bcontents\"D\n" +
	"\x11BroadcastManifest\x12/\n" +
	"\bcontents\x18\x01 \x03(\v2\x13.filesystem.FSEntryR\bcontents\"g\n" +
	"\x10BroadcastRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12\x1b\n" +
	"\tfile_path\x18\x03 \x01(\tR\bfilePath\"j\n" +
	"\x0fDownloadRequest\x12\x1b\n" +
	"\tfrom_user\x18\x01 \x01(\tR\bfromUser\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x03 \x01(\tR\tchunkSize\"\x86\x01\n" +
	"\tFileChunk\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12\x1f\n" +
	"\vchunk_count\x18\x03 \x01(\x03R\n" +
	"chunkCount\x12!\n" +
	"\ftotal_chunks\x18\x04 \x01(\x03R\vtotalChunks\"*\n" +
	"\x0eUploadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"F\n" +
	"\x12GetManifestRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1c\n" +
	"\trecursive\x18\x02 \x01(\bR\trecursive\"F\n" +
	"\x13GetManifestResponse\x12/\n" +
	"\bcontents\x18\x01 \x03(\v2\x13.filesystem.FSEntryR\bcontents2\xa9\x02\n" +
	"\n" +
	"Filesystem\x12J\n" +
	"\tBroadcast\x12\x1d.filesystem.BroadcastManifest\x1a\x1c.filesystem.BroadcastRequest0\x01\x12N\n" +
	"\vGetManifest\x12\x1e.filesystem.GetManifestRequest\x1a\x1f.filesystem.GetManifestResponse\x12@\n" +
	"\bDownload\x12\x1b.filesystem.DownloadRequest\x1a\x15.filesystem.FileChunk0\x01\x12=\n" +
	"\x06Upload\x12\x15.filesystem.FileChunk\x1a\x1a.filesystem.UploadResponse(\x01BCZAgithub.com/RGood/shrdr/common/pkg/generated/filesystem;filesystemb\x06proto3"

var (
	file_filesystem_filesystem_proto_rawDescOnce sync.Once
	file_filesystem_filesystem_proto_rawDescData []byte
)

func file_filesystem_filesystem_proto_rawDescGZIP() []byte {
	file_filesystem_filesystem_proto_rawDescOnce.Do(func() {
		file_filesystem_filesystem_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_filesystem_filesystem_proto_rawDesc), len(file_filesystem_filesystem_proto_rawDesc)))
	})
	return file_filesystem_filesystem_proto_rawDescData
}

var file_filesystem_filesystem_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_filesystem_filesystem_proto_goTypes = []any{
	(*FSEntry)(nil),             // 0: filesystem.FSEntry
	(*File)(nil),                // 1: filesystem.File
	(*Folder)(nil),              // 2: filesystem.Folder
	(*BroadcastManifest)(nil),   // 3: filesystem.BroadcastManifest
	(*BroadcastRequest)(nil),    // 4: filesystem.BroadcastRequest
	(*DownloadRequest)(nil),     // 5: filesystem.DownloadRequest
	(*FileChunk)(nil),           // 6: filesystem.FileChunk
	(*UploadResponse)(nil),      // 7: filesystem.UploadResponse
	(*GetManifestRequest)(nil),  // 8: filesystem.GetManifestRequest
	(*GetManifestResponse)(nil), // 9: filesystem.GetManifestResponse
}
var file_filesystem_filesystem_proto_depIdxs = []int32{
	1, // 0: filesystem.FSEntry.file:type_name -> filesystem.File
	2, // 1: filesystem.FSEntry.folder:type_name -> filesystem.Folder
	0, // 2: filesystem.Folder.contents:type_name -> filesystem.FSEntry
	0, // 3: filesystem.BroadcastManifest.contents:type_name -> filesystem.FSEntry
	0, // 4: filesystem.GetManifestResponse.contents:type_name -> filesystem.FSEntry
	3, // 5: filesystem.Filesystem.Broadcast:input_type -> filesystem.BroadcastManifest
	8, // 6: filesystem.Filesystem.GetManifest:input_type -> filesystem.GetManifestRequest
	5, // 7: filesystem.Filesystem.Download:input_type -> filesystem.DownloadRequest
	6, // 8: filesystem.Filesystem.Upload:input_type -> filesystem.FileChunk
	4, // 9: filesystem.Filesystem.Broadcast:output_type -> filesystem.BroadcastRequest
	9, // 10: filesystem.Filesystem.GetManifest:output_type -> filesystem.GetManifestResponse
	6, // 11: filesystem.Filesystem.Download:output_type -> filesystem.FileChunk
	7, // 12: filesystem.Filesystem.Upload:output_type -> filesystem.UploadResponse
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_filesystem_filesystem_proto_init() }
func file_filesystem_filesystem_proto_init() {
	if File_filesystem_filesystem_proto != nil {
		return
	}
	file_filesystem_filesystem_proto_msgTypes[0].OneofWrappers = []any{
		(*FSEntry_File)(nil),
		(*FSEntry_Folder)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_filesystem_filesystem_proto_rawDesc), len(file_filesystem_filesystem_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filesystem_filesystem_proto_goTypes,
		DependencyIndexes: file_filesystem_filesystem_proto_depIdxs,
		MessageInfos:      file_filesystem_filesystem_proto_msgTypes,
	}.Build()
	File_filesystem_filesystem_proto = out.File
	file_filesystem_filesystem_proto_goTypes = nil
	file_filesystem_filesystem_proto_depIdxs = nil
}
